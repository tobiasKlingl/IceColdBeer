// src/js/config.js

/**
 * config.js
 * Enth√§lt alle konfigurierbaren Parameter des Spiels.
 */

export const logicalWidth = window.screen.width;
const devicePixelRatio = window.devicePixelRatio;
const inchToMeter = 0.0254;

// Dynamische Berechnung der physischen Breite des Displays
export function estimateDisplayWidthInMeters() {
    const cssPPI = 96; // CSS-Dichte (Standard in Browsern)
    const estimatedPPI = devicePixelRatio * cssPPI; // Gesch√§tzte physische PPI
    const screenWidthInMeters = logicalWidth / estimatedPPI * inchToMeter; // Breite in Metern berechnen
    return screenWidthInMeters;
}


export const config = {
    // Prozentsatz der H√∂he, den das Canvas einnimmt
    canvasHeightPercentage: 0.6,

    // Header-Einstellungen
    headerHeight: '6vh',
    headerBackgroundOpacity: 0.8,

    // Abst√§nde f√ºr das Spielfeld
    playfieldTopMargin: '1vh',
    playfieldBottomMargin: '1vh',

    // Transparenzeinstellungen f√ºr Elemente
    elementBackgroundOpacity: 0.7,

    // Ball-Eigenschaften
    ballRadius: 6, // Radius der Kugel
    ballStartXFraction: 0.9, // Startposition relativ zur Breite
    ballColor: '#505050', //'#444444',

    // Stangen-Eigenschaften
    barHeight: 5, // H√∂he der Stange
    barColor: 'rgba(255, 165, 0, 0.8)',
    baseBarSpeed: 5, // Grundgeschwindigkeit der Stange
    barSpeedDampingFactor: 1.0, // Controls the deceleration rate (0 < dampingFactor < 1)
    barStartYPercentage: 0.95, // Startposition der Stange (relativ zur H√∂he)

    // Physikparameter
    gravity: 9.81, // Erdbeschleunigung in m/s¬≤
    airDensity: 1.225, // Dichte der Luft (kg/m¬≥)
    dragCoefficient: 0.47, // Luftwiderstandsbeiwert f√ºr eine Kugel
    ballMass: 0.1, // Masse des Balls (kg)

    // Reibung
    staticFrictionCoefficient: 0.02, // Nicht direkt Haftreibung weil kein Gleitvorgang, sondern Haftung gegen den Beginn zu Rollen
    kineticFrictionCoefficient: 0.005, // Rollreibungskoeffizient (typisch: 0.001-0.01)
    wallBounceDamping: 0.7, // Energieverlust bei Kollision mit W√§nden

    // Loch-Einstellungen
    holeOverlapThresholdMiss: 0.99, // Schwellenwert f√ºr Miss-L√∂cher
    holeOverlapThresholdTarget: 0.95, // Schwellenwert f√ºr Ziel-L√∂cher
    holeBorderWidth: 3, // Breite des Lochrandes

    // Farben
    colors: {
        currentTargetHoleColor: 'rgba(186, 85, 211, 0.8)', /* Kr√§ftiges Lila f√ºr das aktuelle Ziel */
        otherTargetHoleColor: 'rgba(0, 255, 0, 0.8)', // Gr√ºn f√ºr andere Ziele
        missHoleColor: 'rgba(255, 0, 0, 0.8)', // Rot f√ºr Verlustl√∂cher
        holeBorderColor: 'rgba(255, 255, 255, 1)', // Wei√üer Rand f√ºr L√∂cher
        playfieldBorderColor: 'rgba(139, 69, 19, 0.8)', // Braun f√ºr Spielfeldrand
        buttonColor: 'rgba(0, 128, 255, 0.8)', // Blau f√ºr Buttons
        buttonHoverColor: 'rgba(0, 102, 204, 0.8)', // Dunkleres Blau f√ºr Hover-Effekt
        headerBackgroundColor: 'rgba(255, 215, 0, 0.8)', // Goldgelb f√ºr Header
    },
    playfieldBorderWidth: '5px', // Breite des Spielfeldrandes

    // Schriftart-Einstellungen
    fontSizePercentage: 0.03, // Schriftgr√∂√üe relativ zur H√∂he
    fontFamily: 'Arial', // Schriftart
    fontColor: '#000000', // Schriftfarbe

    // Lebenssystem
    maxLives: 3, // Maximale Anzahl an Leben

    // Anzeigeeinstellungen
    showNumbersOnMissHoles: false, // Zeige Nummern auf Miss-L√∂chern

    // Button-Einstellungen
    buttonSize: '10.4vh', // Gr√∂√üe der Buttons
    buttonFontSize: '4.5vh',
    restartButtonSize: '16vh',
    arrowButtonMargin: '5px', // Margin f√ºr Buttons

    // Timer-Einstellungen
    timerUpdateInterval: 1000, // Aktualisierungsintervall des Timers in ms

    // Gesamtanzahl der Level
    totalLevels: 10, // Anzahl der Ziel-L√∂cher

    // Margin unter den Steuerungselementen
    controlsBottomMargin: '2vh', // Abstand unter den Steuerungselementen

    // Delta-Y f√ºr Lochverschiebung (Bruchteil der Canvas-H√∂he)
    deltaYFraction: 0.06, // Verschiebung der L√∂cher in der H√∂he

    // Joystick-Einstellungen
    joystickSize: '11.75vh', // Gr√∂√üe des Joysticks
    joystickHandleHeight: '40%', // H√∂he des Joystick-Griffs
    joystickMaxMovement: 51, // Maximale Bewegung des Joysticks in Pixel
    joystickSensitivity: 10, // Empfindlichkeit des Joysticks
    joystickDeadzone: 0, // Deadzone f√ºr minimale Bewegungen

    // Expert Mode Einstellungen
    expertModeHoleMovementRadiusTarget: 7, // Bewegungsspielraum f√ºr Ziel-L√∂cher
    expertModeHoleMovementSpeedTarget: 0.08, // Geschwindigkeit der Ziel-L√∂cher
    expertModeHoleMovementRadiusMiss: 5, // Bewegungsspielraum f√ºr Miss-L√∂cher
    expertModeHoleMovementSpeedMiss: 0.13, // Geschwindigkeit der Miss-L√∂cher
    expertModeHoleDirectionChangeInterval: 1500, // Intervall f√ºr Richtungs√§nderung in Millisekunden
    expertModeHoleDirectionAngleRange: 20, // Winkelbereich f√ºr Richtungs√§nderung in Grad

    // Spielmodi
    gameModeKeys: ['beginner', 'advanced', 'expert'], // Schl√ºssel f√ºr Spielmodi
    gameModes: {
        'beginner': { 
            title: 'Beginner',
            highscoreSheetName: 'highscores_beginner',
            emoji: 'üê£' // Symbol f√ºr Anf√§nger
        }, 
        'advanced': { 
            title: 'Fortgeschritten',
            highscoreSheetName: 'highscores_advanced',
            emoji: 'üöÄ' // Symbol f√ºr Fortgeschrittene
        }, 
        'expert': { 
            title: 'Experte',
            highscoreSheetName: 'highscores_expert',
            emoji: 'üíÄ' // Symbol f√ºr Experten
        },
    },

    // Platzhalter f√ºr dynamische Werte
    canvasWidthInMeters: null, // Physische Breite des Canvas (sp√§ter gesetzt)
    metersToPixels: null,      // Pixel pro Meter (sp√§ter gesetzt)
    pixelsToMeters: null,      // Meter pro Pixel (sp√§ter gesetzt)
};